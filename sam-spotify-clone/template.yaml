AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  sam-spotify-clone

  Sample SAM Template for sam-spotify-clone

Globals:
  Function:
    Timeout: 10
    Runtime: java8
    MemorySize: 512
    CodeUri: target/HelloWorld-1.0.jar

Resources:
  GetPresignedUrlsFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: GetPresignedUrlsFunction
      Handler: com.spotifyclone.demospotifyclone.Lambda.LambdaHandlers$GetPresignedUrlsLambdaHandler
      Environment:
        Variables:
          BUCKET_NAME: spotify-clone-mason

  SaveSongToDbFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: SaveSongToDbFunction
      Handler: com.spotifyclone.demospotifyclone.Lambda.LambdaHandlers$SaveSongToDbLambdaHandler
      Environment:
        Variables:
          BUCKET_NAME: spotify-clone-mason
          DB_INSTANCE_NAME: spotify_clone_mason_3

  GetAllAlbumsFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: GetAllAlbumsFunction
      Handler: com.spotifyclone.demospotifyclone.Lambda.LambdaHandlers$GetAllAlbumsLambdaHandler
      Environment:
        Variables:
          DB_INSTANCE_NAME: spotify_clone_mason_3

  # Policies to allow Lambda functions to interact with S3 and RDS
  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: S3AndRDSAccessPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:*
                Resource:
                  - arn:aws:s3:::spotify-clone-mason/*
              - Effect: Allow
                Action:
                  - rds:*
                Resource:
                  - !Sub 'arn:aws:rds:${AWS::Region}:${AWS::AccountId}:db:MyRDSInstance'



Outputs:
  GetPresignedUrlsApi:
    Description: API Gateway endpoint for GetPresignedUrls function
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/presigned-url/"

  SaveSongToDbApi:
    Description: API Gateway endpoint for SaveSongToDb function
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/save-song/"

  GetAllAlbumsApi:
    Description: API Gateway endpoint for GetAllAlbums function
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/albums/"


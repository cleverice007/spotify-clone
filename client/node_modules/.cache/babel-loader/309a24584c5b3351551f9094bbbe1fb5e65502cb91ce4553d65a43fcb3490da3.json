{"ast":null,"code":"import React,{useEffect,useRef}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";const PlaybackBar=_ref=>{let{currentSong,isPlaying,onPlayPause}=_ref;const audioRef=useRef(null);useEffect(()=>{if(audioRef.current){if(isPlaying){audioRef.current.play();}else{audioRef.current.pause();}}},[isPlaying]);return/*#__PURE__*/_jsx(\"div\",{className:\"playback-bar\",children:currentSong?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"song-info\",children:[/*#__PURE__*/_jsx(\"img\",{src:currentSong.albumCoverUrl,alt:currentSong.title}),/*#__PURE__*/_jsx(\"span\",{children:currentSong.title})]}),/*#__PURE__*/_jsx(\"button\",{onClick:onPlayPause,className:\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded m-2\",children:isPlaying?'Pause':'Play'}),/*#__PURE__*/_jsx(\"audio\",{ref:audioRef,src:currentSong.filePath})]}):/*#__PURE__*/_jsx(\"div\",{children:\"No song selected\"})});};export default PlaybackBar;","map":{"version":3,"names":["React","useEffect","useRef","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","PlaybackBar","_ref","currentSong","isPlaying","onPlayPause","audioRef","current","play","pause","className","children","src","albumCoverUrl","alt","title","onClick","ref","filePath"],"sources":["/Users/yanyuming/Documents/GitHub/spotify-clone/client/src/components/PlaybackBar.tsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport { Song,Album } from '../interfaces/MusicModels';\n\ninterface PlaybackBarProps {\n  currentSong: Song | null;\n  isPlaying: boolean;\n  onPlayPause: () => void;  // 控制播放和暫停的callback\n}\n\nconst PlaybackBar: React.FC<PlaybackBarProps> = ({ currentSong, isPlaying, onPlayPause }) => {\n    const audioRef = useRef<HTMLAudioElement | null>(null);\n  \n    useEffect(() => {\n      if (audioRef.current) {\n        if (isPlaying) {\n          audioRef.current.play();\n        } else {\n          audioRef.current.pause();\n        }\n      }\n    }, [isPlaying]);\n  \n    return (\n      <div className=\"playback-bar\">\n        {currentSong ? (\n          <>\n            <div className=\"song-info\">\n              <img src={currentSong.albumCoverUrl} alt={currentSong.title} />\n              <span>{currentSong.title}</span>\n            </div>\n            <button \n              onClick={onPlayPause} \n              className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded m-2\"\n            >\n              {isPlaying ? 'Pause' : 'Play'}\n            </button>\n            <audio ref={audioRef} src={currentSong.filePath} />\n          </>\n        ) : (\n          <div>No song selected</div>\n        )}\n      </div>\n    );\n  }\n  \n\nexport default PlaybackBar;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,MAAM,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,gCAAAC,QAAA,IAAAC,SAAA,yBASjD,KAAM,CAAAC,WAAuC,CAAGC,IAAA,EAA6C,IAA5C,CAAEC,WAAW,CAAEC,SAAS,CAAEC,WAAY,CAAC,CAAAH,IAAA,CACpF,KAAM,CAAAI,QAAQ,CAAGZ,MAAM,CAA0B,IAAI,CAAC,CAEtDD,SAAS,CAAC,IAAM,CACd,GAAIa,QAAQ,CAACC,OAAO,CAAE,CACpB,GAAIH,SAAS,CAAE,CACbE,QAAQ,CAACC,OAAO,CAACC,IAAI,CAAC,CAAC,CACzB,CAAC,IAAM,CACLF,QAAQ,CAACC,OAAO,CAACE,KAAK,CAAC,CAAC,CAC1B,CACF,CACF,CAAC,CAAE,CAACL,SAAS,CAAC,CAAC,CAEf,mBACER,IAAA,QAAKc,SAAS,CAAC,cAAc,CAAAC,QAAA,CAC1BR,WAAW,cACVL,KAAA,CAAAE,SAAA,EAAAW,QAAA,eACEb,KAAA,QAAKY,SAAS,CAAC,WAAW,CAAAC,QAAA,eACxBf,IAAA,QAAKgB,GAAG,CAAET,WAAW,CAACU,aAAc,CAACC,GAAG,CAAEX,WAAW,CAACY,KAAM,CAAE,CAAC,cAC/DnB,IAAA,SAAAe,QAAA,CAAOR,WAAW,CAACY,KAAK,CAAO,CAAC,EAC7B,CAAC,cACNnB,IAAA,WACEoB,OAAO,CAAEX,WAAY,CACrBK,SAAS,CAAC,0EAA0E,CAAAC,QAAA,CAEnFP,SAAS,CAAG,OAAO,CAAG,MAAM,CACvB,CAAC,cACTR,IAAA,UAAOqB,GAAG,CAAEX,QAAS,CAACM,GAAG,CAAET,WAAW,CAACe,QAAS,CAAE,CAAC,EACnD,CAAC,cAEHtB,IAAA,QAAAe,QAAA,CAAK,kBAAgB,CAAK,CAC3B,CACE,CAAC,CAEV,CAAC,CAGH,cAAe,CAAAV,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}
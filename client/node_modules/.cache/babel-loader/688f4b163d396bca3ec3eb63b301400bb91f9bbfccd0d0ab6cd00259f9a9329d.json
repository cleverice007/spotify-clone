{"ast":null,"code":"var _jsxFileName = \"/Users/yanyuming/Documents/GitHub/spotify-clone/client/src/components/PlaybackBar.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PlaybackBar = ({\n  currentSong,\n  isPlaying,\n  onPlayPause\n}) => {\n  _s();\n  const audioRef = useRef(null);\n  useEffect(() => {\n    if (audioRef.current) {\n      if (isPlaying) {\n        audioRef.current.play();\n      } else {\n        audioRef.current.pause();\n      }\n    }\n  }, [isPlaying]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"playback-bar\",\n    children: currentSong ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"song-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: currentSong.albumCoverUrl,\n          alt: currentSong.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: currentSong.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onPlayPause,\n        className: \"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded m-2\",\n        children: isPlaying ? 'Pause' : 'Play'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n        ref: audioRef,\n        src: currentSong.filePath\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No song selected\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 7\n  }, this);\n};\n_s(PlaybackBar, \"+byXHHf22FzALubYzgUeSQRtz1Y=\");\n_c = PlaybackBar;\nexport default PlaybackBar;\nvar _c;\n$RefreshReg$(_c, \"PlaybackBar\");","map":{"version":3,"names":["React","useEffect","useRef","jsxDEV","_jsxDEV","Fragment","_Fragment","PlaybackBar","currentSong","isPlaying","onPlayPause","_s","audioRef","current","play","pause","className","children","src","albumCoverUrl","alt","title","fileName","_jsxFileName","lineNumber","columnNumber","onClick","ref","filePath","_c","$RefreshReg$"],"sources":["/Users/yanyuming/Documents/GitHub/spotify-clone/client/src/components/PlaybackBar.tsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport { Song,Album } from '../interfaces/MusicModels';\n\ninterface PlaybackBarProps {\n  currentSong: Song | null;\n  isPlaying: boolean;\n  onPlayPause: () => void;  // 控制播放和暫停的callback\n}\n\nconst PlaybackBar: React.FC<PlaybackBarProps> = ({ currentSong, isPlaying, onPlayPause }) => {\n    const audioRef = useRef<HTMLAudioElement | null>(null);\n  \n    useEffect(() => {\n      if (audioRef.current) {\n        if (isPlaying) {\n          audioRef.current.play();\n        } else {\n          audioRef.current.pause();\n        }\n      }\n    }, [isPlaying]);\n  \n    return (\n      <div className=\"playback-bar\">\n        {currentSong ? (\n          <>\n            <div className=\"song-info\">\n              <img src={currentSong.albumCoverUrl} alt={currentSong.title} />\n              <span>{currentSong.title}</span>\n            </div>\n            <button \n              onClick={onPlayPause} \n              className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded m-2\"\n            >\n              {isPlaying ? 'Pause' : 'Play'}\n            </button>\n            <audio ref={audioRef} src={currentSong.filePath} />\n          </>\n        ) : (\n          <div>No song selected</div>\n        )}\n      </div>\n    );\n  }\n  \n\nexport default PlaybackBar;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AASjD,MAAMC,WAAuC,GAAGA,CAAC;EAAEC,WAAW;EAAEC,SAAS;EAAEC;AAAY,CAAC,KAAK;EAAAC,EAAA;EACzF,MAAMC,QAAQ,GAAGV,MAAM,CAA0B,IAAI,CAAC;EAEtDD,SAAS,CAAC,MAAM;IACd,IAAIW,QAAQ,CAACC,OAAO,EAAE;MACpB,IAAIJ,SAAS,EAAE;QACbG,QAAQ,CAACC,OAAO,CAACC,IAAI,CAAC,CAAC;MACzB,CAAC,MAAM;QACLF,QAAQ,CAACC,OAAO,CAACE,KAAK,CAAC,CAAC;MAC1B;IACF;EACF,CAAC,EAAE,CAACN,SAAS,CAAC,CAAC;EAEf,oBACEL,OAAA;IAAKY,SAAS,EAAC,cAAc;IAAAC,QAAA,EAC1BT,WAAW,gBACVJ,OAAA,CAAAE,SAAA;MAAAW,QAAA,gBACEb,OAAA;QAAKY,SAAS,EAAC,WAAW;QAAAC,QAAA,gBACxBb,OAAA;UAAKc,GAAG,EAAEV,WAAW,CAACW,aAAc;UAACC,GAAG,EAAEZ,WAAW,CAACa;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC/DrB,OAAA;UAAAa,QAAA,EAAOT,WAAW,CAACa;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7B,CAAC,eACNrB,OAAA;QACEsB,OAAO,EAAEhB,WAAY;QACrBM,SAAS,EAAC,0EAA0E;QAAAC,QAAA,EAEnFR,SAAS,GAAG,OAAO,GAAG;MAAM;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvB,CAAC,eACTrB,OAAA;QAAOuB,GAAG,EAAEf,QAAS;QAACM,GAAG,EAAEV,WAAW,CAACoB;MAAS;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA,eACnD,CAAC,gBAEHrB,OAAA;MAAAa,QAAA,EAAK;IAAgB;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK;EAC3B;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAAd,EAAA,CAlCGJ,WAAuC;AAAAsB,EAAA,GAAvCtB,WAAuC;AAqC7C,eAAeA,WAAW;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}